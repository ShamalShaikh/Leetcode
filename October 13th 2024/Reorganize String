class Solution {
public:
    string reorganizeString(string s) {
        priority_queue<pair<int,char>, vector<pair<int,char>>>pq;
        unordered_map<char,int>m;
        int n = s.size();
        for(int i=0;i<n; ++i){
            ++m[s[i]];
        }
        for(auto item: m){
            pq.push({item.second, item.first});
        }
        int j = 0;
        pair<int,char> curr, prev;
        string ans = "";
        while(!pq.empty()){
            curr = pq.top(); pq.pop();
            ans+=  curr.second;
            --curr.first;
            if(prev.first > 0){
                pq.push(prev);
            }
            prev = curr;
        }
        return ans.size() == n ? ans : "";
    }
};
